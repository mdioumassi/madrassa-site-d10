{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
 
%}

{% if content.field_color_banner_level.0['#markup'] is not empty %}
	{%  set color = content.field_color_banner_level.0['#markup'] %}
{% else %}
	{% set color = 'blue' %}
{% endif %}

{% block paragraph %}
	<div{{attributes.addClass(classes)}}>
		{% block content %}
			<form action="{{path('madrasa_registration.children.course.lavel')}}" method='post'>
				<div class="row">
					{% for item in content.field_levels['#items'] %}
						<div class="col-4">
							<div class="w3-card-4 mb-4">
								<header class="w3-container w3-{{ color }}">
									<input class="w3-radio float-end mt-2" type="radio" name="levelId" value="{{ item.target_id }}">
									<h2>{{ item.entity.field_name.value }}</h2>
								</header>

								<div class="w3-container">
									<table class="w3-table w3-bordered">
										<tr>
											<td>Tarif:</td>
											<td>
												<span class="display-4">{{ item.entity.field_tarif.value }}€</span>/an</td>
										</tr>
										<tr>
											<td>Frais d'inscription:</td>
											<td>{{ item.entity.field_registration_fees.value ~ ' €'  }}</td>
										</tr>
										<tr>
											<td>Horaires:</td>
											<td>{{ item.entity.field_hours.value ~ ' h/semaine'  }}</td>
										</tr>
									</table>
									{% for subject in item.entity.field_subjects_level %}
										{% if subject.entity.field_subject_name.value is not empty %}
											<strong>Matières:</strong>
											{{subject.entity.field_subject_name.value|raw }}
										{% endif %}
									{% endfor %}
									{% if item.entity.field_description.value %}
										<strong>Description:</strong>
										{{ item.entity.field_description.value|raw }}
									{% endif %}
								</div>
							</div>
						</div>
					{% endfor %}
				</div>
				<div class="w3-center">
					<button class="btn btn-success" type="submit">Suivant</button>
			</form>
		{% endblock %}
	</div>
{% endblock paragraph %}
